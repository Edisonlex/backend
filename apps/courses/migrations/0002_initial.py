# Generated by Django 5.1.3 on 2025-01-13 19:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='course',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='category.category'),
        ),
        migrations.AddField(
            model_name='course',
            name='comments',
            field=models.ManyToManyField(blank=True, to='courses.comment'),
        ),
        migrations.AddField(
            model_name='course',
            name='course_section',
            field=models.ManyToManyField(blank=True, to='courses.coursesection'),
        ),
        migrations.AddField(
            model_name='courseslibrary',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='courseslibrary',
            name='courses',
            field=models.ManyToManyField(blank=True, to='courses.course'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='episodes',
            field=models.ManyToManyField(blank=True, to='courses.episode'),
        ),
        migrations.AddField(
            model_name='paidcourseslibrary',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paidcourseslibrary',
            name='courses',
            field=models.ManyToManyField(blank=True, to='courses.course'),
        ),
        migrations.AddField(
            model_name='episode',
            name='questions',
            field=models.ManyToManyField(blank=True, to='courses.question'),
        ),
        migrations.AddField(
            model_name='course',
            name='questions',
            field=models.ManyToManyField(blank=True, to='courses.question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.question'),
        ),
        migrations.AddField(
            model_name='course',
            name='rating',
            field=models.ManyToManyField(blank=True, to='courses.rate'),
        ),
        migrations.AddField(
            model_name='course',
            name='requisite',
            field=models.ManyToManyField(blank=True, to='courses.requisite'),
        ),
        migrations.AddField(
            model_name='episode',
            name='resources',
            field=models.ManyToManyField(blank=True, to='courses.resource'),
        ),
        migrations.AddField(
            model_name='course',
            name='resources',
            field=models.ManyToManyField(blank=True, to='courses.resource'),
        ),
        migrations.AddField(
            model_name='sector',
            name='related_courses',
            field=models.ManyToManyField(blank=True, to='courses.course'),
        ),
        migrations.AddField(
            model_name='votes',
            name='answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_votes', to='courses.answer'),
        ),
        migrations.AddField(
            model_name='course',
            name='what_learnt',
            field=models.ManyToManyField(blank=True, to='courses.whatlearnt'),
        ),
    ]
